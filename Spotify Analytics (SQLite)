# For this project, I downloaded Spotify data from Kaggle, created a table to insert the data, and performed analytics on the data using SQL

# Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)


# I then inserted the Spotify Data .csv into the table and explored the data using SQL


--Who are the top 10 artists by popularity?

SELECT artist_name, popularity FROM BIT_DB.Spotifydata
ORDER BY popularity desc
LIMIT 10;


--What artist released the shortest song?

SELECT artist_name, duration_ms FROM BIT_DB.Spotifydata
ORDER BY duration_ms asc
LIMIT 1;


--What's the average energy, danceability, and popularity by artist and track?

SELECT artist_name, track_name, AVG(energy), AVG(danceability), AVG(popularity) FROM BIT_DB.Spotifydata
GROUP BY artist_name, track_name;


--What's the average danceability for the 10 most popular songs?

SELECT artist_name, track_name, popularity, avg(danceability) FROM BIT_DB.Spotifydata
GROUP BY popularity
ORDER BY popularity desc
LIMIT 10;


--What tracks would be considered above average energy?

SELECT track_name, artist_name, energy,
    CASE
        WHEN energy > 0.64636 THEN "above"
        ELSE "below"
END as energy_level
FROM BIT_DB.Spotifydata
ORDER BY energy_level;


--Using a CTE table to show every artist with a popularity average greater than 90.

WITH avg_popularity_CTE AS (
    Select
    artist_name, AVG(popularity) as avg_popularity
    FROM Spotifydata
    GROUP BY artist_name
    )
    
Select artist_name, avg_popularity, 'Top Star' AS tag
FROM avg_popularity_CTE
WHERE avg_popularity > 90;
